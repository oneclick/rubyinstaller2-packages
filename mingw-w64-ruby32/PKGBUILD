_realname=ruby
pkgbase=mingw-w64-ruby32
pkgname="${MINGW_PACKAGE_PREFIX}-ruby32"
# version used by MRI
pkgver2=3.2.4
# version used by pacman
pkgver="${pkgver2/-/.}"
pkgrel=1
pkgdesc="An object-oriented language for quick and easy programming (mingw-w64)"
arch=('any')
mingw_arch=('mingw32' 'ucrt64')
url="https://www.ruby-lang.org/en"
license=("BSD, custom")
makedepends=("${MINGW_PACKAGE_PREFIX}-gcc" "${MINGW_PACKAGE_PREFIX}-pkg-config")
depends=("${MINGW_PACKAGE_PREFIX}-gcc-libs"
         "${MINGW_PACKAGE_PREFIX}-gmp"
         "${MINGW_PACKAGE_PREFIX}-libffi"
         "${MINGW_PACKAGE_PREFIX}-libyaml"
         "${MINGW_PACKAGE_PREFIX}-zlib")
options=('staticlibs' 'strip')
source=("https://cache.ruby-lang.org/pub/ruby/${pkgver2%.*}/${_realname}-${pkgver2}.tar.xz"
        "https://www.openssl.org/source/openssl-3.0.13.tar.gz"
        0001-Add-C-ext-win32-dll_directory-as-an-alternative-to-f.patch
        0002-Don-t-add-an-exe-file-manifest.patch
        0006-Windows-Prefer-USERPROFILE-over-HOMEPATH-on-startup-.patch
        0009-Win32-Return-registry-strings-as-UTF-8.patch
        0010-Mingw32-Use-ATOMIC_PTR-functions-to-avoid-compiler-w.patch
        0011-merge-revision-s-055613fd868a8c94e43893f8c58a00cdd2a.patch
        ruby.ico
        rubyw.ico)

# To update SHA256 hashes run: ridk exec sh -c "updpkgsums PKGBUILD"

sha256sums=('e7f1653d653232ec433472489a91afbc7433c9f760cc822defe7437c9d95791b'
            '88525753f79d3bec27d2fa7c66aa0b92b3aa9498dafd93d7cfa4b3780cdae313'
            'a50c81ab8c178689485257f8eaa70bd8184b878a798780084668f838912e2832'
            'da079dbfdc3d4e1b976ed15d58244ed6e0df201ec829bead578fb4a7177b9cab'
            '7bba11585dc597281e1c616f00a482016d57e5fb983f02fb05ed6260a9858ffd'
            'd221e357861ff3f46f29de978cc00a8f12ffdd865a5d8c1783f3e31e34675808'
            '5947650b4c503cbc9fc176479b70e18e6d8ca2b21ddcf3763ee97972140420f7'
            '072090dd5d51cb99ae8df83e3cae6271148ac094d2112a05c47900e11d0cf3a7'
            '6c80ba2ca49840e387a08b7fedc6e7acd298ac2ec853155209efb2af20397b22'
            'c30fb04ac0e88ba634daaa811a81ea5a75027646617b895acd14df9518a4a55a')

prepare() {
  cd ${srcdir}/${_realname}-${pkgver2}
  rm -rf ext/win32/dll_directory
  patch -p1 -i ${srcdir}/0001-Add-C-ext-win32-dll_directory-as-an-alternative-to-f.patch
  patch -p1 -i ${srcdir}/0002-Don-t-add-an-exe-file-manifest.patch
  patch -p1 -i ${srcdir}/0006-Windows-Prefer-USERPROFILE-over-HOMEPATH-on-startup-.patch -l
  patch -p1 -i ${srcdir}/0009-Win32-Return-registry-strings-as-UTF-8.patch
  patch -p1 -i ${srcdir}/0010-Mingw32-Use-ATOMIC_PTR-functions-to-avoid-compiler-w.patch
  patch -p1 -i ${srcdir}/0011-merge-revision-s-055613fd868a8c94e43893f8c58a00cdd2a.patch
}

build() {
  # Build OpenSSL 3.0.13 with FIPS support
  cd ${srcdir}
  tar -xf openssl-3.0.13.tar.gz
  cd openssl-3.0.13
  echo "configuring openssl now"
  ./config enable-fips --prefix=${srcdir}/openssl-3.0.13-build --openssldir=${srcdir}/openssl-3.0.13-build
  make
  make install
  echo "make install has run now"



  export PATH=${srcdir}/openssl-3.0.13-build/include/openssl:$PATH
  export PKG_CONFIG_PATH=${srcdir}/openssl-3.0.13-build/lib64/pkgconfig
  export LDFLAGS="-L${srcdir}/openssl-3.0.13-build/lib64"
  export CPPFLAGS="-I${srcdir}/openssl-3.0.13-build/include"


  echo "PATH: $PATH"
  echo "PKG_CONFIG_PATH: $PKG_CONFIG_PATH"
  echo "LDFLAGS: $LDFLAGS"
  echo "CPPFLAGS: $CPPFLAGS"

  echo "openssl-3.0.13-build -->"
  ls ${srcdir}/openssl-3.0.13-build/
  echo "--------------------"
  echo "bin -->"
  ls ${srcdir}/openssl-3.0.13-build/bin
  echo "--------------------"
  echo "lib64 ---->"
  ls ${srcdir}/openssl-3.0.13-build/lib64
  echo "--------------------"
  echo "pkgconfig ---->"
  ls ${srcdir}/openssl-3.0.13-build/lib64/pkgconfig
  echo "--------------------"

  echo "cat openssl.pc --->"
  cat ${srcdir}/openssl-3.0.13-build/lib64/pkgconfig/openssl.pc
  echo "--------------------"
  echo "cat ossl-modules --->"
  echo "cat ${srcdir}/openssl-3.0.13-build/lib64/ossl-modules"
  ls ${srcdir}/openssl-3.0.13-build/lib64/ossl-modules
  echo "--------------------"
  echo "check ssl.h --->"
  echo "find . -name thingy"
  find ${srcdir}/${_realname}-${pkgver2}/ -name "*ssl*"
  echo "--------------------"
  echo "ls ext openssl mkmf --->"
  echo "ls ${srcdir}/${_realname}-${pkgver2}"
  ls ${srcdir}/${_realname}-${pkgver2}
  echo "--------------------"
  echo "ls ext --->"
  ls ${srcdir}/${_realname}-${pkgver2}/ext
  echo "--------------------"
  echo "ls openssl --->"
  ls ${srcdir}/${_realname}-${pkgver2}/ext/openssl
  echo "--------------------"
  echo "cat openssl/extconf.rb --->"
  cat ${srcdir}/${_realname}-${pkgver2}/ext/openssl/extconf.rb
  echo "--------------------"
  echo "ls openssl-3.0.13-build/include ---> "
  echo "ls ${srcdir}/openssl-3.0.13-build/include"
  ls ${srcdir}/openssl-3.0.13-build/include
  echo "--------------------"
  echo "ls openssl-3.0.13-build/include/openssl ---> "
  echo "ls ${srcdir}/openssl-3.0.13-build/include/openssl"
  ls ${srcdir}/openssl-3.0.13-build/include/openssl
  echo "--------------------"
  # echo "cat config should fail ideally --->"
  # cat ${srcdir}/build-${MINGW_CHOST}/config.log


  echo "settings flags now"
  CPPFLAGS+=" -DFD_SETSIZE=2048"
  CFLAGS="-O3 -fno-fast-math -fstack-protector-strong"
  LDFLAGS="-pipe -s -fstack-protector-strong -L${srcdir}/openssl-3.0.13-build/lib64"
  export RUBY_CONFIGURE_OPTS="--with-openssl-dir=${srcdir}/openssl-3.0.13-build/include/openssl"
  echo "flags are set"
  echo "RUBY_CONFIGURE_OPTS= ${RUBY_CONFIGURE_OPTS}"

  echo "making ruby build directories"
  [[ -d "${srcdir}/build-${MINGW_CHOST}" ]] && rm -rf "${srcdir}/build-${MINGW_CHOST}"
  mkdir -p "${srcdir}/build-${MINGW_CHOST}" && cd "${srcdir}/build-${MINGW_CHOST}"
  echo "finish making ruby build directories"

  echo "cp .ico step"
  cp ${srcdir}/*.ico .

  echo "configure step with openssl-dir"
  ../${_realname}-${pkgver2}/configure \
    --prefix=${MINGW_PREFIX} \
    --build=${MINGW_CHOST} \
    --host=${MINGW_CHOST} \
    --target=${MINGW_CHOST} \
    --with-openssl-dir=${srcdir}/openssl-3.0.13-build/include/openssl \
    --with-bundled-md5 \
    --with-out-ext=readline,pty,syslog

  echo "generate RI"
  make showflags main
  echo "Generate RI and HTML documentation"
  # Make rdoc outputs so many lines -> print dots only
  make rdoc html 2>&1 | ./miniruby -ne "STDERR.print '.'"
}

check() {
  cd "${srcdir}/build-${MINGW_CHOST}"
  echo $PATH
  make -l "TESTOPTS=-q" btest test-basic
  # TODO: Full tests fail currently
  # make -l "TESTOPTS=-q" test-all || true
}

package() {
  cd "${srcdir}/build-${MINGW_CHOST}"
  make -f GNUMakefile DESTDIR="${pkgdir}" install
  for script in gem; do
    install ${srcdir}/ruby-${pkgver2}/bin/${script} \
      ${pkgdir}${MINGW_PREFIX}/bin/
  done
}
